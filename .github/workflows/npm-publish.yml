name: Publish to NPM

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., 1.0.0)'
        required: true
        type: string

jobs:
  publish:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Build library
        run: npm run build:lib

      - name: Update package.json for publishing
        run: |
          # Update package.json to make it publishable
          npm pkg set private=false
          npm pkg set main="./dist/supanotice-components.es.js"
          npm pkg set module="./dist/supanotice-components.es.js"
          npm pkg set types="./dist/index.d.ts"
          npm pkg set exports.="{\"import\":\"./dist/supanotice-components.es.js\",\"types\":\"./dist/index.d.ts\"}"
          npm pkg set files="[\"dist\",\"README.md\",\"LICENSE\"]"
          npm pkg set keywords="[\"web-components\",\"notifications\",\"lit\",\"typescript\",\"supanotice\"]"
          npm pkg set repository.type="git"
          npm pkg set repository.url="git+https://github.com/${{ github.repository }}.git"
          npm pkg set homepage="https://github.com/${{ github.repository }}#readme"
          npm pkg set bugs.url="https://github.com/${{ github.repository }}/issues"

      - name: Set version from input or release
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            npm version ${{ github.event.inputs.version }} --no-git-tag-version
          elif [ "${{ github.event_name }}" = "release" ]; then
            # Extract version from release tag (remove 'v' prefix if present)
            VERSION="${{ github.event.release.tag_name }}"
            VERSION="${VERSION#v}"
            npm version "${VERSION}" --no-git-tag-version
          fi

      - name: Publish to NPM
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub deployment
        uses: actions/github-script@v7
        with:
          script: |
            const { data: deployment } = await github.rest.repos.createDeployment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.sha,
              environment: 'npm',
              description: 'Published to NPM registry'
            });
            
            await github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: deployment.id,
              state: 'success',
              description: 'Successfully published to NPM'
            });
